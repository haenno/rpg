version: "3.7"

x-logging: &loki-logging
  driver: json-file
  options:
    tag: "{{.ImageName}}|{{.Name}}|{{.ImageFullID}}|{{.FullID}}"

services:

  rpgdb:
    container_name: rpgdb
    hostname: rpgdb
    restart: always
    image: postgres:14.1-bullseye
    volumes:
      - ./data/db:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=${ENV_POSTGRES_DB}
      - POSTGRES_USER=${ENV_POSTGRES_USER}
      - POSTGRES_PASSWORD=${ENV_POSTGRES_PASSWORD}

  rpgapp:
    container_name: rpgapp
    hostname: rpgapp
    restart: always
    build:
      context: ./rpg
      dockerfile: Dockerfile
    command: bash -c '/srv/rpg/start_rpg_prod.sh'
    volumes:
      - .:/code
      - ./:/usr/src/rpg      
    depends_on:
      - rpgdbdb
    ports:
      - 8642:8642
    labels:
      - traefik.http.routers.rpg.rule=Host(`rpg.${ENV_RPG_DOCKER_DOMAIN}`)
      - traefik.http.routers.rpg.service=rpg
      # - traefik.http.routers.rpg.middlewares=auth
      - traefik.http.services.rpg.loadbalancer.server.port=8642
      - traefik.http.routers.rpg.entrypoints=https
      - traefik.http.routers.rpg.tls=true
      - traefik.http.routers.rpg.tls.certresolver=${ENV_RPG_DOCKER_CERT_RESOLVER}
    networks:
      - internalnetwork
    restart: always
    logging: *loki-logging

networks:
  internalnetwork:
    name: internalnetwork
    external: true

